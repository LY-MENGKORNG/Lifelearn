// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Permission {
  id             Int              @id @default(autoincrement())
  key            String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
  roles          Role[]
  RolePermission RolePermission[]
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime?        @updatedAt
  permissions    Permission[]
  RolePermission RolePermission[]
}

model RolePermission {
  id           Int        @id @default(autoincrement())
  roleId       Int
  permissionId Int
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime?  @updatedAt
}

model User {
  id                Int            @id @default(autoincrement())
  username          String?
  firstName         String
  lastName          String
  email             String         @unique
  password          String
  tokenCreationDate DateTime?
  refreshToken      String?
  loginFailures     Int?
  isOnline          Boolean        @default(false)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime?      @updatedAt
  organization      Organization[]
}

model Organization {
  id          Int       @id @default(autoincrement())
  name        String
  managerId   Int
  manager     User      @relation(fields: [managerId], references: [id])
  logoUrl     String?
  address     String?
  phoneNumber String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}
